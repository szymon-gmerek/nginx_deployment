name: Deploy Nginx

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install SSH Client
      run: sudo apt-get install -y openssh-client

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy Nginx to Host 1
      run: |
        scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.HOST1_IP }}:/tmp/docker-compose.yml
        scp -o StrictHostKeyChecking=no index.html ${{ secrets.SSH_USER }}@${{ secrets.HOST1_IP }}:/tmp/index.html
    
        ssh ${{ secrets.SSH_USER }}@${{ secrets.HOST1_IP }} << 'EOF'
          cd /tmp
          sudo docker-compose down
          sudo docker-compose up -d 
          sleep 10
          
          MAINTENANCE_STATUS=$(sudo docker exec proxy sh -c "printenv MAINTENANCE")
    
          if [ "$MAINTENANCE_STATUS" = "true" ]; then
            HOSTNAME=$(hostname)
            echo "<p>Host: $HOSTNAME</p>" >> /tmp/index.html
          fi
          
          sudo docker cp /tmp/index.html proxy:/var/www/html/index.html
        EOF
        
    - name: Get HTTTP Code from Host2
      run: |  
        if curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.HOST1_IP }} | grep -q "200"; then
          echo "Deployment to Host 1 successful!"
        else
          echo "Deployment to Host 1 failed!"
          exit 1
        fi
    
    - name: Deploy Nginx to Host 2
      if: success()
      run: |
        scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.HOST2_IP }}:/tmp/docker-compose.yml
        scp -o StrictHostKeyChecking=no index.html ${{ secrets.SSH_USER }}@${{ secrets.HOST2_IP }}:/tmp/index.html
        
        
        ssh ${{ secrets.SSH_USER }}@${{ secrets.HOST2_IP }} << 'EOF'
          cd /tmp
          sudo docker-compose down
          sudo docker-compose up -d 
          sleep 10
          
          MAINTENANCE_STATUS=$(sudo docker exec proxy sh -c "printenv MAINTENANCE")
    
          if [ "$MAINTENANCE_STATUS" = "true" ]; then
            HOSTNAME=$(hostname)
            echo "<p>Host: $HOSTNAME</p>" >> /tmp/index.html
          fi
          
          sudo docker cp /tmp/index.html proxy:/var/www/html/index.html
        EOF

    - name: Get HTTTP Code from Host1
      run: |  
        if curl -s -o /dev/null -w "%{http_code}" http://${{ secrets.HOST2_IP }} | grep -q "200"; then
          echo "Deployment to Host 1 successful!"
        else
          echo "Deployment to Host 1 failed!"
          exit 1
        fi
